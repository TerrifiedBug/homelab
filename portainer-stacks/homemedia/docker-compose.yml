version: "3.8"

services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8063:8080
      - 6881:6881
      - 6881:6881/udp
      - 8989:8989
      - 7878:7878
      - 9696:9696
    volumes:
      - ./gluetun:/gluetun
      - ./gluetun/auth/config.toml:/gluetun/auth/config.toml:ro
    environment:
      - VPN_SERVICE_PROVIDER=nordvpn
      - HTTP_CONTROL_SERVER_AUTH_CONFIG_FILEPATH=/gluetun/auth/config.toml
      - OPENVPN_USER=${NORDVPN_USER}
      - OPENVPN_PASSWORD=${NORDVPN_PASS}
      - SERVER_COUNTRIES="United Kingdom"
    healthcheck:
      test: [ "CMD-SHELL", "wget --user=healthcheck --password=secret -qO- http://localhost:8000/v1/openvpn/status 2>/dev/null | grep -q '\"status\":\"running\"' || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ./qbittorrent:/config
      - ./media/downloads:/downloads
    healthcheck:
      test: [ "CMD", "ping", "-c", "1", "www.google.com" ]
      interval: 60s
      retries: 3
      start_period: 20s
      timeout: 10s
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ./prowlarr:/config
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ./sonarr:/config
      - ./media/downloads:/downloads
      - ./media/tv:/tv
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ./radarr:/config
      - ./media/downloads:/downloads
      - ./media/movies:/movies
    restart: unless-stopped

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    ports:
      - 8096:8096
    volumes:
      - ./jellyfin/config:/config
      - ./media/movies:/movies
      - ./media/tv:/tv
    restart: unless-stopped

  jellyseer:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=Europe/London
    ports:
      - 5056:5055
    volumes:
      - ./jellyseerr:/app/config
    restart: unless-stopped

  vpn-watchdog:
    image: alpine
    container_name: vpn-watchdog
    restart: unless-stopped
    network_mode: service:gluetun
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      sh -c '
        apk add --no-cache curl >/dev/null 2>&1
        PREVIOUS_STATUS=""
        while true; do
          STATUS_JSON=$(curl -su healthcheck:secret http://localhost:8000/v1/openvpn/status 2>/dev/null)
          STATUS=$(echo "$STATUS_JSON" | sed -n "s/.*\"status\":\"\\([a-z]*\\)\".*/\\1/p")

          if [ "$STATUS" = "disconnected" ] && [ "$PREVIOUS_STATUS" != "disconnected" ]; then
            echo "[WATCHDOG] VPN is DISCONNECTED. Stopping dependent containers..."
            docker stop qbittorrent sonarr radarr prowlarr
          elif [ "$STATUS" = "running" ] && [ "$PREVIOUS_STATUS" = "disconnected" ]; then
            echo "[WATCHDOG] VPN is back UP. Starting dependent containers..."
            docker start qbittorrent sonarr radarr prowlarr
          else
            echo "[WATCHDOG] VPN status is $STATUS. No action needed."
          fi

          PREVIOUS_STATUS=$STATUS
          sleep 30
        done
      '
